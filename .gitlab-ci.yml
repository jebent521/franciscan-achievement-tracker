stages:          # List of stages for jobs, and their order of execution
  # - build
  - test
  # - deploy

flyway-test-job:
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: achievements_db
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: franny_devs
    POSTGRES_HOST: postgres  # Important: Use the service name as the hostname
    POSTGRES_PORT: 5432       # Explicitly define the port (optional but good practice)
    POSTGRES_URL: jdbc:postgresql://$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB
  image: postgres # You might want to use a smaller image with flyway and psql if possible
  stage: test
  before_script:  # Use before_script for setup tasks
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -d postgres -c "CREATE DATABASE $POSTGRES_DB;"
    - psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c "CREATE USER flyway WITH PASSWORD 'flyway';"
    - psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRES_DB TO flyway;"
    - psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c "GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO flyway;"
    - psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c "GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO flyway;"
  script:
    - flyway -url=$POSTGRES_URL -user=flyway -password=flyway migrate
# unit-test-job:   # This job runs in the test stage.
#   stage: test    # It only starts when the job in the build stage completes successfully.
#   script:
#     - echo "Running unit tests... This will take about 60 seconds."
#     - sleep 60
#     - echo "Code coverage is 90%"

# lint-test-job:   # This job also runs in the test stage.
#   stage: test    # It can run at the same time as unit-test-job (in parallel).
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - sleep 10
#     - echo "No lint issues found."

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
